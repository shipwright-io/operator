---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: shipwright-build
  name: shipwright-triggers
  labels:
    app.kubernetes.io/name: shipwright-triggers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: shipwright-triggers
  name: shipwright-triggers
rules:
  - apiGroups:
    - shipwright.io
    resources:
    - buildruns
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - shipwright.io
    resources:
    - builds
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - customruns
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - customruns/finalizers
    verbs:
    - patch
    - update
  - apiGroups:
    - tekton.dev
    resources:
    - customruns/status
    verbs:
    - patch
    - update
  - apiGroups:
    - tekton.dev
    resources:
    - pipelineruns
    verbs:
    - get
    - list
    - patch
    - update
    - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: shipwright-triggers
  labels:
    app.kubernetes.io/name: shipwright-triggers
subjects:
  - kind: ServiceAccount
    namespace: shipwright-build
    name: shipwright-triggers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: shipwright-triggers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: shipwright-build
  labels:
    app.kubernetes.io/name: shipwright-triggers
  name: shipwright-triggers
rules:
  - apiGroups:
    - shipwright.io
    resources:
    - buildruns
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - shipwright.io
    resources:
    - builds
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - customruns
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - customruns/finalizers
    verbs:
    - patch
    - update
  - apiGroups:
    - tekton.dev
    resources:
    - customruns/status
    verbs:
    - patch
    - update
  - apiGroups:
    - tekton.dev
    resources:
    - pipelineruns
    verbs:
    - get
    - list
    - patch
    - update
    - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: shipwright-build
  name: shipwright-triggers
  labels:
    app.kubernetes.io/name: shipwright-triggers
subjects:
  - kind: ServiceAccount
    namespace: shipwright-build
    name: shipwright-triggers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: shipwright-triggers
---
apiVersion: v1
kind: Service
metadata:
  namespace: shipwright-build
  name: shipwright-triggers
  labels:
    app.kubernetes.io/name: shipwright-triggers
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: shipwright-triggers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: shipwright-build
  name: shipwright-triggers
  labels:
    app.kubernetes.io/name: shipwright-triggers
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: shipwright-triggers
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shipwright-triggers
    spec:
      serviceAccountName: shipwright-triggers
      containers:
        - name: shipwright-triggers
          image: "quay.io/jkhelil/openshift-builds-triggers:latest"
          args:
            - --health-probe-bind-address
            - ":8081"
          imagePullPolicy: IfNotPresent
          ports:
            - name: webhook
              containerPort: 80
              protocol: TCP
            - name: probe
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: probe
          readinessProbe:
            httpGet:
              path: /readyz
              port: probe
